{"version":3,"sources":["src/amp.js","src/index.js"],"names":["cast","args","Array","isArray","length","complement","fn","pick","obj","keys","reduce","acc","key","toCamelCase","str","s","match","map","x","slice","toUpperCase","toLowerCase","join","makeName","cTor","method","startsWith","charAt","sourcesAndTargets","targets","shift","yeah","split","nay","quickMethods","allMethods","amp","master","withAmp","factory","source","upper","asST","forge","m","u","are","indexesAre","areNot","indexesNot","forEach","target","index","res","push","qty","qtyNot","section","any","first","last","quick","all","notAny","notAll","firstNot","lastNot","firstIndex","lastIndex","firstIndexNot","lastIndexNot","toto","valuesMethod","yn","qm","oven","el","extend","console","clear","cl","log","myMath","even","v","Number","isSafeInteger","arr","r","quickEven","Object"],"mappings":"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","file":"src.b672f6be.js","sourceRoot":"..","sourcesContent":["/* jshint esversion: 10 */\r\nconst cast = (...args) => {\r\n  return Array.isArray(args[0]) && args.length === 1 ? args[0] : args;\r\n};\r\nconst complement = (fn) => (...args) => !fn(...args);\r\n//\r\nconst pick = (obj, ...keys) => {\r\n  return cast(...keys).reduce((acc, key) => {\r\n    if (key in obj) acc[key] = obj[key];\r\n    return acc;\r\n  }, {});\r\n};\r\n// https://www.30secondsofcode.org/js/s/to-camel-case\r\n//\r\nconst toCamelCase = (str) => {\r\n  const s =\r\n    str &&\r\n    str\r\n      .match(\r\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\r\n      )\r\n      .map((x) => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())\r\n      .join(\"\");\r\n  return s.slice(0, 1).toLowerCase() + s.slice(1);\r\n};\r\n//\r\nconst makeName = (cTor) => {\r\n  const method = toCamelCase(cTor);\r\n  if (cTor.startsWith(\"HTML\")) return [method, cTor.slice(4)];\r\n  return [method, cTor.charAt(0).toUpperCase() + cTor.slice(1)];\r\n};\r\n//\r\nconst sourcesAndTargets = (...args) => {\r\n  const targets = [...cast(...args)];\r\n  return [targets.shift(), cast(...targets)];\r\n};\r\nconst yeah = \"any all are indexesAre qty first last firstIndex lastIndex\".split(\r\n  \" \"\r\n);\r\nconst nay = \"notAny notAll areNot indexesNot firstNot lastNot firstIndexNot lastIndexNot\".split(\r\n  \" \"\r\n);\r\nconst quickMethods = \"method any are first last qty qtyNot\".split(\" \");\r\nconst allMethods = [\"section\", \"quick\", ...yeah, ...nay, \"toto\"];\r\n\r\nexport default function amp(master, withAmp = false) {\r\n  const valuesMethod = (toto, upper) => {\r\n    master[`values${upper}`] = (keys, ...args) => pick(toto(...args), keys);\r\n    master[`method${upper}`] = (...keys) => {\r\n      return (...args) => pick(toto(...args), cast(...keys));\r\n    };\r\n  };\r\n  const factory = ({ fn, method, upper, asST }) => {\r\n    let source, targets;\r\n    const res = (target) => (asST ? fn(source, target) : fn(target));\r\n    const forge = (m, ...args) => {\r\n      if (asST) {\r\n        [source, targets] = sourcesAndTargets(...args);\r\n      } else {\r\n        targets = cast(...args);\r\n      }\r\n      const u = {\r\n        method,\r\n        are: [],\r\n        indexesAre: [],\r\n        areNot: [],\r\n        indexesNot: []\r\n      };\r\n      targets.forEach((target, index) => {\r\n        if (res(target)) {\r\n          u.are.push(target);\r\n          u.indexesAre.push(index);\r\n        } else {\r\n          u.areNot.push(target);\r\n          u.indexesNot.push(index);\r\n        }\r\n      });\r\n      //\r\n      u.qty = u.indexesAre.length;\r\n      u.qtyNot = u.indexesNot.length;\r\n      u.section = [u.are, u.areNot];\r\n      u.any = u.qty > 0;\r\n      u.first = u.are[0];\r\n      u.last = u.are[u.qty - 1];\r\n      u.quick = pick(u, quickMethods);\r\n      if (m in u) return u[m];\r\n      u.all = u.qtyNot === 0;\r\n      u.notAny = u.qty === 0;\r\n      u.notAll = u.qtyNot > 0;\r\n      u.firstNot = u.areNot[0];\r\n      u.lastNot = u.areNot[u.qty - 1];\r\n      if (u.any) {\r\n        u.firstIndex = u.indexesAre[0];\r\n        u.lastIndex = u.indexesAre[u.qty - 1];\r\n      } else {\r\n        u.firstIndex = -1;\r\n        u.lastIndex = -1;\r\n      }\r\n      if (u.notAll) {\r\n        u.firstIndexNot = u.indexesNot[0];\r\n        u.lastIndexNot = u.indexesNot[u.qtyNot - 1];\r\n      } else {\r\n        u.firstIndexNot = -1;\r\n        u.lastIndexNot = -1;\r\n      }\r\n      if (m === \"toto\") return u;\r\n      return u[m];\r\n    };\r\n\r\n    allMethods.forEach((m) => {\r\n      master[`${m}${upper}`] = (...args) => forge(m, ...args);\r\n    });\r\n    valuesMethod(master[`toto${upper}`], upper);\r\n  };\r\n\r\n  const yn = (cTor, fn) => {\r\n    const [method, upper] = makeName(cTor);\r\n    master[method] = fn;\r\n    master[`not${upper}`] = complement(fn);\r\n    return [method, upper];\r\n  };\r\n  //\r\n  const quick = (cTor, fn, asST = false) => {\r\n    const [method, upper] = yn(cTor, fn);\r\n    const qm = [...quickMethods, \"quick\"];\r\n    let source, targets;\r\n    const res = (target) => (asST ? fn(source, target) : fn(target));\r\n    const oven = (m, ...args) => {\r\n      if (asST) {\r\n        [source, targets] = sourcesAndTargets(...args);\r\n      } else {\r\n        targets = cast(...args);\r\n      }\r\n      const are = targets.reduce((acc, el) => {\r\n        if (res(el)) acc.push(el);\r\n        return acc;\r\n      }, []);\r\n      //\r\n      const u = {\r\n        method,\r\n        are\r\n      };\r\n      u.qty = u.are.length;\r\n      u.qtyNot = targets.length - u.qty;\r\n      u.any = u.qty > 0;\r\n      u.first = u.are[0];\r\n      u.last = u.are[u.qty - 1];\r\n      if (m === \"quick\") return u;\r\n      return u[m];\r\n    };\r\n\r\n    qm.forEach((m) => {\r\n      master[`${m}${upper}`] = (...args) => oven(m, ...args);\r\n    });\r\n  };\r\n  //\r\n  const extend = (cTor, fn, asST = false) => {\r\n    const [method, upper] = yn(cTor, fn);\r\n    factory({ fn, method, upper, asST });\r\n  };\r\n  //\r\n  if (withAmp) {\r\n    master.amp = {};\r\n    master.amp.yn = yn;\r\n    master.amp.quick = quick;\r\n    master.amp.extend = extend;\r\n    return master;\r\n  }\r\n  master.yn = yn;\r\n  master.quick = quick;\r\n  master.extend = extend;\r\n  return master;\r\n}\r\n","/* jshint esversion: 10 */\nimport \"./styles.css\";\nimport amp from \"./amp.js\";\nconsole.clear();\nconst cl = (...args) => console.log(...args);\n\nconst myMath = function myMath() {};\namp(myMath);\nconst even = (v) => Number.isSafeInteger(v) && v % 2 === 0;\nmyMath.quick(\"even\", even);\nconst arr = [1, 2, \"x\", [], 3, 4, {}, 5, \"y\", 6];\nconst r = myMath.quickEven(arr);\ncl(r);\ncl(Object.keys(r).length);\n"]}